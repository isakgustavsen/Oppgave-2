# Platform detection
PLATFORM = $(shell uname -a)
ifeq ($(findstring Microsoft, $(PLATFORM)),Microsoft)
    $(info === Linux Subsystem for Windows)
    CC = x86_64-w64-mingw32-gcc
    PRE_BUILD = cp SDL2-64.dll SDL2.dll
    EXECUTABLE := $(EXECUTABLE).exe

    PRE_REQ := $(shell command -v $(CC) 2> /dev/null)
    ifndef PRE_REQ
        $(error Compiler not installed; install with 'sudo apt-get -y install mingw-w64 mingw-w64-tools')
    endif
else
ifeq ($(findstring Cygwin, $(PLATFORM)),Cygwin)
    EXECUTABLE := $(EXECUTABLE).exe
    ifeq ($(findstring x86_64, $(PLATFORM)),x86_64)
        $(info === 64bit Cygwin)
        PRE_BUILD = cp SDL2-64.dll SDL2.dll
    else
        $(info === 32bit Cygwin)
        PRE_BUILD = cp SDL2-32.dll SDL2.dll
    endif
else
ifeq ($(findstring Darwin, $(PLATFORM)),Darwin)
    $(info === MacOS)
    CFLAGS += `sdl2-config --cflags`
    LIBS = -lm `sdl2-config --libs`

    PRE_REQ := $(shell command -v sdl2-config 2> /dev/null)
    ifndef PRE_REQ
        $(error libSDL2 not installed; install with 'brew install sdl2')
    endif
else
    $(info === Linux)
    LIBS += -Wl,-unresolved-symbols=ignore-in-shared-libs -Wl,-rpath '-Wl,$$ORIGIN'
    PRE_BUILD = ln -fs libSDL2.so libSDL2-2.0.so.0
endif
endif
endif
